(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{321:function(t,a,s){"use strict";s.r(a);var r=s(13),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化"}},[t._v("#")]),t._v(" 前端性能优化")]),t._v(" "),a("h2",{attrs:{id:"减少-http-请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少-http-请求"}},[t._v("#")]),t._v(" 减少 HTTP 请求")]),t._v(" "),a("p",[t._v("将多个小文件合并为一个大文件，从而减少 HTTP 请求次数")]),t._v(" "),a("h2",{attrs:{id:"使用-http2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-http2"}},[t._v("#")]),t._v(" 使用 HTTP2")]),t._v(" "),a("p",[t._v("HTTP2相比HTTP1.1有以下几个优势：")]),t._v(" "),a("ul",[a("li",[t._v("解析速度快：服务器解析 HTTP1.1 的请求时，必须不断地读入字节，直到遇到分隔符 CRLF 为止。而 HTTP2 是基于帧的协议，每个帧都有表示帧长度的字段。")]),t._v(" "),a("li",[t._v("多路复用：HTTP1.1要发起多个请求就需要建立多个TCP连接，而HTTP2中多个请求可以复用同一个TCP连接")]),t._v(" "),a("li",[t._v("首部压缩：HTTP2中重复的首部项可以存储下来，只发送请求间不同的部分，减少了流量")]),t._v(" "),a("li",[t._v("优先级：HTTP2 可以对比较紧急的请求设置一个较高的优先级，服务器在收到这样的请求后，可以优先处理。")]),t._v(" "),a("li",[t._v("流量控制：可以对不同的流的流量进行精确控制")]),t._v(" "),a("li",[t._v("服务器推送：服务器可以对一个客户端请求发送多个响应。换句话说，除了对最初请求的响应外，服务器还可以额外向客户端推送资源，而无需客户端明确地请求。")])]),t._v(" "),a("h2",{attrs:{id:"服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染"}},[t._v("#")]),t._v(" 服务端渲染")]),t._v(" "),a("p",[t._v("首屏渲染快，SEO好")]),t._v(" "),a("h2",{attrs:{id:"静态资源使用cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态资源使用cdn"}},[t._v("#")]),t._v(" 静态资源使用CDN")]),t._v(" "),a("h2",{attrs:{id:"css放在头部-js放在底部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css放在头部-js放在底部"}},[t._v("#")]),t._v(" CSS放在头部，JS放在底部")]),t._v(" "),a("h2",{attrs:{id:"使用字体图标代替图片图标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用字体图标代替图片图标"}},[t._v("#")]),t._v(" 使用字体图标代替图片图标")]),t._v(" "),a("p",[t._v("将图标制作成一个字体，使用时就跟字体一样，可以设置属性，例如 font-size、color 等等，非常方便。并且字体图标是矢量图，不会失真。还有一个优点是生成的文件特别小。")]),t._v(" "),a("h2",{attrs:{id:"使用缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用缓存"}},[t._v("#")]),t._v(" 使用缓存")]),t._v(" "),a("h2",{attrs:{id:"压缩文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#压缩文件"}},[t._v("#")]),t._v(" 压缩文件")]),t._v(" "),a("p",[t._v("在 webpack 可以使用如下插件进行压缩：")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript：UglifyPlugin")]),t._v(" "),a("li",[t._v("CSS ：MiniCssExtractPlugin")]),t._v(" "),a("li",[t._v("HTML：HtmlWebpackPlugin")])]),t._v(" "),a("p",[t._v("或者通过向 HTTP 请求头中的 Accept-Encoding 头添加 gzip 标识来开启压缩功能")]),t._v(" "),a("h2",{attrs:{id:"图片优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片优化"}},[t._v("#")]),t._v(" 图片优化")]),t._v(" "),a("h3",{attrs:{id:"延迟加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载"}},[t._v("#")]),t._v(" 延迟加载")]),t._v(" "),a("h3",{attrs:{id:"降低图片质量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#降低图片质量"}},[t._v("#")]),t._v(" 降低图片质量")]),t._v(" "),a("h3",{attrs:{id:"调整图片大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整图片大小"}},[t._v("#")]),t._v(" 调整图片大小")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6892994632968306702",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化 24 条建议（2020）"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);