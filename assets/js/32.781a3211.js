(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{324:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"从输入url到加载网页的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到加载网页的过程"}},[t._v("#")]),t._v(" 从输入URL到加载网页的过程")]),t._v(" "),a("h2",{attrs:{id:"_1-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-dns"}},[t._v("#")]),t._v(" 1. DNS")]),t._v(" "),a("h2",{attrs:{id:"_2-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-http"}},[t._v("#")]),t._v(" 2. HTTP")]),t._v(" "),a("h2",{attrs:{id:"_3-tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp"}},[t._v("#")]),t._v(" 3. TCP")]),t._v(" "),a("h2",{attrs:{id:"_4-渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-渲染"}},[t._v("#")]),t._v(" 4. 渲染")]),t._v(" "),a("h3",{attrs:{id:"_4-1-dom-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-dom-tree"}},[t._v("#")]),t._v(" 4.1 DOM tree")]),t._v(" "),a("p",[t._v("处理 HTML 标记并构造 DOM 树。DOM 树描述了文档的内容。"),a("code",[t._v("<html>")]),t._v(" 元素是第一个标签也是文档树的根节点。树反映了不同标记之间的关系和层次结构。嵌套在其他标记中的标记是子节点。DOM 节点的数量越多，构建 DOM 树所需的时间就越长。")]),t._v(" "),a("p",[t._v("当解析器发现"),a("strong",[t._v("非阻塞资源")]),t._v("，例如一张图片，浏览器会请求这些资源并且继续解析。当遇到一个 CSS 文件时，解析也可以继续进行，但是对于 "),a("code",[t._v("<script>")]),t._v(" 标签（特别是没有 async 或者 defer 属性的）会阻塞渲染并停止 HTML 的解析。")]),t._v(" "),a("h4",{attrs:{id:"请求支持对象-support-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求支持对象-support-objects"}},[t._v("#")]),t._v(" 请求支持对象（support objects）")]),t._v(" "),a("p",[t._v("support objects 通常指 "),a("code",[t._v("<link>")]),t._v(" 里的CSS链接，和"),a("code",[t._v("<img>")]),t._v(" 中的图片链接。构造DOM树和请求支持对象会同时发生。")]),t._v(" "),a("p",[t._v("当初始的 HTML 文档被完全加载和解析完成之后，"),a("code",[t._v("DOMContentLoaded")]),t._v(" 事件被触发，而无需等待 CSS、图像和子框架的完全加载。")]),t._v(" "),a("h4",{attrs:{id:"script-标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签"}},[t._v("#")]),t._v(" script 标签")]),t._v(" "),a("p",[t._v("当浏览器的HTML解析器遇到一个"),a("code",[t._v("<script>")]),t._v("标签时会暂停构建DOM，然后将控制权移交至JavaScript引擎，这时引擎会开始执行JavaScript脚本，直到执行结束后，浏览器才会从之前中断的地方恢复，然后继续构建DOM。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-cssom-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-cssom-tree"}},[t._v("#")]),t._v(" 4.2 CSSOM tree")]),t._v(" "),a("p",[t._v("在收到CSS文件后，浏览器就会开始分析语法并将 CSS 规则转换为可以理解和使用的样式映射。浏览器遍历 CSS 中的每个规则集，根据 CSS 选择器创建具有父、子和兄弟关系的节点树。")]),t._v(" "),a("p",[t._v("UA样式会覆盖浏览器的默认样式")]),t._v(" "),a("h4",{attrs:{id:"阻塞渲染的css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻塞渲染的css"}},[t._v("#")]),t._v(" 阻塞渲染的CSS")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("<link>")]),t._v(" 标签的 "),a("code",[t._v("media")]),t._v(" 属性，可以指定首次加载时先不进行构建CSSOM树，只有在符合特定条件时，才会让浏览器进行阻塞渲染然后构建CSSOM树。")]),t._v(" "),a("p",[t._v("示例如下：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\x3c!-- 默认 media 属性设置为 "all"，即阻塞渲染 --\x3e')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("style.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 效果同上 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("style.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("media")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 根据网页加载时设备的方向，portrait.css 可能阻塞渲染，也可能不阻塞渲染 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("portrait.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("media")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("orientation:portrait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 只在打印网页时应用，因此网页首次在浏览器中加载时，它不会阻塞渲染。 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("print.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("    "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("media")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("print"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("使用媒体查询可以让CSS资源不在首次加载中阻塞渲染，但不管是哪种CSS资源它们的下载请求都不会被忽略，"),a("strong",[t._v("浏览器仍然会先下载CSS文件")])]),t._v(" "),a("h3",{attrs:{id:"_4-3-render-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-render-tree"}},[t._v("#")]),t._v(" 4.3 Render tree")]),t._v(" "),a("p",[t._v("渲染树由合并DOM树和CSSOM树构成，构造过程如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("从DOM树的根节点开始，遍历每个可见的节点。")]),t._v(" "),a("p",[t._v("在这一步中，不可见的节点会被忽略，如"),a("code",[t._v("<script>")]),t._v("和"),a("code",[t._v("<meta>")]),t._v("。由CSS定义的隐藏节点如"),a("code",[t._v("<span>")]),t._v("也会被忽略。")]),t._v(" "),a("p",[a("code",[t._v("display: none")]),t._v("会被忽略，而"),a("code",[t._v("visibility: hidden")]),t._v(" 会出现在渲染树中。")])]),t._v(" "),a("li",[a("p",[t._v("为每个可见的节点找到合适的CSS规则并应用")])]),t._v(" "),a("li",[a("p",[t._v("将节点内容和样式结合产生可见节点")])])]),t._v(" "),a("h3",{attrs:{id:"_4-4-layout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-layout"}},[t._v("#")]),t._v(" 4.4 Layout")]),t._v(" "),a("p",[t._v("这一步计算每个对象在设备视窗（viewport）中的准确大小和位置，输出就是一个盒子模型（box model）。")]),t._v(" "),a("h3",{attrs:{id:"_4-5-paint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-paint"}},[t._v("#")]),t._v(" 4.5 Paint")]),t._v(" "),a("h2",{attrs:{id:"_5-加载js等资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-加载js等资源"}},[t._v("#")]),t._v(" 5. 加载JS等资源")]),t._v(" "),a("p",[t._v("TODO:")])])}),[],!1,null,null,null);a.default=r.exports}}]);