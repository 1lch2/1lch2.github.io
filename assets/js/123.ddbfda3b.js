(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{428:function(t,a,s){"use strict";s.r(a);var n=s(13),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"babel-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-原理"}},[t._v("#")]),t._v(" Babel 原理")]),t._v(" "),a("h2",{attrs:{id:"编译过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译过程"}},[t._v("#")]),t._v(" 编译过程")]),t._v(" "),a("ol",[a("li",[t._v("parsing ：将原始代码解析为抽象语法树（ast）\n"),a("ol",[a("li",[t._v("词法分析，也就是将原始代码拆分成一个个的 token（用于描述最小独立语法单元的对象）")]),t._v(" "),a("li",[t._v("语法分析，递归遍历 tokens 数组，构建 ast")])])]),t._v(" "),a("li",[t._v("transforming ：变换第一步的 ast，得到新的 ast")]),t._v(" "),a("li",[t._v("generating（也可称为 printing）： 遍历新的 ast，生成目标代码")])])])}),[],!1,null,null,null);a.default=r.exports}}]);