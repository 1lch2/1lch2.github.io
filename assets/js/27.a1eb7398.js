(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{319:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-版本对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-版本对比"}},[t._v("#")]),t._v(" HTTP 版本对比")]),t._v(" "),a("h2",{attrs:{id:"http-1-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0"}},[t._v("#")]),t._v(" HTTP 1.0")]),t._v(" "),a("p",[t._v("相比HTTP 0.9的变化：")]),t._v(" "),a("ul",[a("li",[t._v("请求方式新增了POST，DELETE，PUT，HEADER等方式")]),t._v(" "),a("li",[t._v("增添了请求头和响应头的概念，在通信中指定了 HTTP 协议版本号，以及其他的一些元信息 (比如: 状态码、权限、缓存、内容编码)")]),t._v(" "),a("li",[t._v("扩充了传输内容格式，具备了传输除纯文本HTML文件以外其他类型文档的能力，图片、音视频资源、二进制等都可以进行传输")])]),t._v(" "),a("p",[t._v("请求头示例：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token request-line"}},[a("span",{pre:!0,attrs:{class:"token method property"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token request-target url"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.0")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("User-Agent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5)")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Accept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("*/*")])]),t._v("\n")])])]),a("p",[t._v("响应头示例：")]),t._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token response-status"}},[a("span",{pre:!0,attrs:{class:"token http-version property"}},[t._v("HTTP/1.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token status-code number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[t._v("OK")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("text/plain")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("137582")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Expires")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Thu, 05 Dec 1997 16:00:00 GMT")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Last-Modified")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token header-value"}},[t._v("Wed, 5 August 1996 15:55:28 GMT")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token text-plain"}},[t._v("// 这是一个空行\n...数据内容\n")])])])]),a("p",[t._v("关于 "),a("code",[t._v("Content-Type")]),t._v(": 客户端依照这个字段解析响应内容，数据类型总称为MIME type，每个值包括一级类型和二级类型，之间用斜杠分隔。举例如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("text/plain\ntext/html\ntext/css\n\nimage/jpeg\nimage/png\nimage/svg+xml\n\naudio/mp4\nvideo/mp4\n\napplication/javascript\n")])])]),a("h3",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("无状态：服务器不跟踪不记录请求过的状态")]),t._v(" "),a("ul",[a("li",[t._v("可以借助cookie/session机制来做身份认证和状态记录")])])]),t._v(" "),a("li",[a("p",[t._v("无连接：浏览器每次请求都需要建立tcp连接")]),t._v(" "),a("ul",[a("li",[t._v("无法复用连接，每次都需要进行三步握手四步释放，效率低")]),t._v(" "),a("li",[t._v("队头阻塞，HTTP 1.0 规定在前一个请求响应到达之后下一个请求才能发送，如果前一个阻塞，后面的请求也给阻塞的")])])])]),t._v(" "),a("h2",{attrs:{id:"http-1-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP 1.1")]),t._v(" "),a("h3",{attrs:{id:"特性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性-2"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("长连接：新增 "),a("code",[t._v("Connection")]),t._v(" 字段，可以设置 "),a("code",[t._v("keep-alive")]),t._v(" 值保持连接不断开")]),t._v(" "),a("ul",[a("li",[t._v("HTTP 1.1默认保持长连接，数据传输完成保持tcp连接不断开,继续用这个通道传输数据")])])]),t._v(" "),a("li",[a("p",[t._v("管道化：基于上面长连接的基础，管道化可以不等第一个请求响应继续发送后面的请求，但响应的顺序还是按照请求的顺序返回")]),t._v(" "),a("ul",[a("li",[t._v("可以一次发送多个请求，但是响应仍是顺序返回，仍然无法解决队头阻塞的问题")])])]),t._v(" "),a("li",[a("p",[t._v("缓存处理：新增字段 Cache-Control")]),t._v(" "),a("ul",[a("li",[t._v("参见 "),a("RouterLink",{attrs:{to:"/browser/HTTP_Cache.html"}},[t._v("HTTP缓存")])],1)])]),t._v(" "),a("li",[a("p",[t._v("断点传输")]),t._v(" "),a("ul",[a("li",[t._v("在上传/下载资源时，如果资源过大，将其分割为多个部分，分别上传/下载，如果遇到网络故障，可以从已经上传/下载好的地方继续请求，不用从头开始，提高效率")])])])]),t._v(" "),a("h2",{attrs:{id:"http-2-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0"}},[t._v("#")]),t._v(" HTTP 2.0")]),t._v(" "),a("h3",{attrs:{id:"特性-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性-3"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("二进制分帧:")]),t._v(" "),a("ul",[a("li",[t._v("HTTP 2之后将所有传输的信息分割为更小的消息和帧，并对它们采用二进制格式的编码，提高传输效率")])])]),t._v(" "),a("li",[a("p",[t._v("多路复用： 在共享TCP链接的基础上同时发送请求和响应")]),t._v(" "),a("ul",[a("li",[t._v("在同一域名下所有访问都是从同一个tcp连接中走，http消息被分解为独立的帧，乱序发送，服务端根据标识符和首部将消息重新组装起来。")])])]),t._v(" "),a("li",[a("p",[t._v("头部压缩:")]),t._v(" "),a("ul",[a("li",[a("blockquote",[a("p",[t._v("由于 HTTP 是无状态的，每一个请求都需要头部信息标识这次请求相关信息，所以会造成传输很多重复的信息，当请求数量增大的时候，消耗的资源就会慢慢积累上去。")])])]),t._v(" "),a("li",[t._v("HTTP 2 维护一个头部信息字典，差量进行更新头信息，减少头部信息传输占用的资源")])])]),t._v(" "),a("li",[a("p",[t._v("服务器推送：服务器可以额外的向客户端推送资源，而无需客户端明确的请求")]),t._v(" "),a("ul",[a("li",[t._v("常见场景是客户端请求一个网页，这个网页里面包含很多静态资源。正常情况下，客户端必须收到网页后，解析HTML源码，发现有静态资源，再发出静态资源请求。其实，服务器可以预期到客户端请求网页后，很可能会再请求静态资源，所以就主动把这些静态资源随着网页一起发给客户端了。")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);