(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{416:function(t,a,e){"use strict";e.r(a);var v=e(13),s=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" XSS")]),t._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。")]),t._v(" "),a("h2",{attrs:{id:"常见方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见方式"}},[t._v("#")]),t._v(" 常见方式")]),t._v(" "),a("ul",[a("li",[t._v("在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。")]),t._v(" "),a("li",[t._v("在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。")]),t._v(" "),a("li",[t._v("在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。")]),t._v(" "),a("li",[t._v("在标签的 href、src 等属性中，包含 javascript: (伪协议)等可执行代码。")]),t._v(" "),a("li",[t._v("在 onload、onerror、onclick 等事件中，注入不受控制代码。")]),t._v(" "),a("li",[t._v("在 style 属性和标签中，包含类似 "),a("code",[t._v('background-image:url("javascript:...");')]),t._v(" 的代码（新版本浏览器已经可以防范）。")]),t._v(" "),a("li",[t._v("在 style 属性和标签中，包含类似 expression(...) 的 CSS 表达式代码（新版本浏览器已经可以防范）。")])]),t._v(" "),a("h2",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("p",[t._v("根据攻击的来源，XSS 攻击可分为存储型、反射型和 DOM 型三种。")]),t._v(" "),a("h3",{attrs:{id:"存储型-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss"}},[t._v("#")]),t._v(" 存储型 XSS")]),t._v(" "),a("h4",{attrs:{id:"攻击步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击步骤"}},[t._v("#")]),t._v(" 攻击步骤")]),t._v(" "),a("ol",[a("li",[t._v("攻击者将恶意代码提交到目标网站的数据库中。")]),t._v(" "),a("li",[t._v("用户打开目标网站时，网站服务端将恶意代码从数据库取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("p",[t._v("存储型 XSS(又被称为持久性XSS)攻击常见于带有用户保存数据的网站功能，如论坛发帖、商品评论、用户私信等。")]),t._v(" "),a("p",[t._v("它是最危险的一种跨站脚本，相比反射型XSS和DOM型XSS具有更高的隐蔽性，所以危害更大，因为它不需要用户手动触发。任何允许用户存储数据的web程序都可能存在存储型XSS漏洞，当攻击者提交一段XSS代码后，被服务器端接收并存储，当所有浏览者访问某个页面时都会被XSS。")]),t._v(" "),a("h4",{attrs:{id:"防御方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防御方式"}},[t._v("#")]),t._v(" 防御方式")]),t._v(" "),a("p",[a("strong",[t._v("1. CSP")]),t._v(": Content-Security-Policy")]),t._v(" "),a("p",[t._v("可以通过 HTTP header 或者 "),a("code",[t._v("<meta>")]),t._v(" 标签来设置。meta 标签方式如下：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("content-security-policy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("default-src self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("2. 转义字符")])]),t._v(" "),a("p",[t._v("可以使用类似"),a("code",[t._v("encodeURIComponent()")]),t._v("这样的方法")]),t._v(" "),a("p",[a("strong",[t._v("3. HttpOnly")])]),t._v(" "),a("p",[t._v("禁止通过"),a("code",[t._v("document.cookie")]),t._v("的方式获取cookies")]),t._v(" "),a("h3",{attrs:{id:"反射型-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射型-xss"}},[t._v("#")]),t._v(" 反射型 XSS")]),t._v(" "),a("h4",{attrs:{id:"攻击步骤-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击步骤-2"}},[t._v("#")]),t._v(" 攻击步骤")]),t._v(" "),a("ol",[a("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),a("li",[t._v("用户打开带有恶意代码的 URL 时，网站"),a("strong",[t._v("服务端")]),t._v("将恶意代码从 URL 中取出，拼接在 HTML 中返回给浏览器。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，混在其中的恶意代码也被执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("p",[t._v("反射型 XSS 跟存储型 XSS 的区别是：存储型 XSS 的恶意代码存在数据库里，反射型 XSS 的恶意代码存在 URL 里。")]),t._v(" "),a("p",[t._v("反射型 XSS (也被称为非持久性XSS)漏洞常见于通过 URL 传递参数的功能，如网站搜索、跳转等。由于需要用户主动打开恶意的 URL 才能生效，攻击者往往会结合多种手段诱导用户点击。")]),t._v(" "),a("p",[t._v("POST 的内容也可以触发反射型 XSS，只不过其触发条件比较苛刻（需要构造表单提交页面，并引导用户点击），所以非常少见。")]),t._v(" "),a("h4",{attrs:{id:"防御方式-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防御方式-2"}},[t._v("#")]),t._v(" 防御方式")]),t._v(" "),a("ol",[a("li",[t._v("Web 页面渲染的所有内容或者渲染的数据都必须来自于服务端。")]),t._v(" "),a("li",[t._v("尽量不要从 URL，document.referrer，document.forms 等这种 DOM API 中获取数据直接渲染")]),t._v(" "),a("li",[t._v("尽量不要使用 eval, new Function()，document.write()，document.writeln()，window.setInterval()，window.setTimeout()，innerHTML，document.createElement() 等可执行字符串的方法。")]),t._v(" "),a("li",[t._v("过滤不必要的HTML标签，例如：iframe, alt, script 和特殊字符。过滤一些事件，例如 onclick, onfocus等。")])]),t._v(" "),a("h3",{attrs:{id:"dom-型-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss"}},[t._v("#")]),t._v(" DOM 型 XSS")]),t._v(" "),a("h4",{attrs:{id:"攻击步骤-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击步骤-3"}},[t._v("#")]),t._v(" 攻击步骤")]),t._v(" "),a("ul",[a("li",[t._v("攻击者构造出特殊的 URL，其中包含恶意代码。")]),t._v(" "),a("li",[t._v("用户打开带有恶意代码的 URL。")]),t._v(" "),a("li",[t._v("用户浏览器接收到响应后解析执行，"),a("strong",[t._v("前端")]),t._v(" JavaScript 取出 URL 中的恶意代码并执行。")]),t._v(" "),a("li",[t._v("恶意代码窃取用户数据并发送到攻击者的网站，或者冒充用户的行为，调用目标网站接口执行攻击者指定的操作。")])]),t._v(" "),a("p",[t._v("跟前两种 XSS 的区别：DOM 型 XSS 攻击中，取出和执行恶意代码由浏览器端完成，属于前端 JavaScript 自身的安全漏洞，而其他两种 XSS 都属于服务端的安全漏洞。")]),t._v(" "),a("p",[t._v("对比:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("存储区")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("插入点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("存储型 XSS")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("后端数据库")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("HTML")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("反射型 XSS")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("URL")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("HTML")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("DOM 型 XSS")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("后端数据库/前端存储/URL")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("前端 JavaScript")])])])]),t._v(" "),a("h4",{attrs:{id:"防御方式-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防御方式-3"}},[t._v("#")]),t._v(" 防御方式")]),t._v(" "),a("ol",[a("li",[t._v("在使用 "),a("code",[t._v(".innerHTML")]),t._v("、"),a("code",[t._v(".outerHTML")]),t._v("、"),a("code",[t._v("document.write()")]),t._v(" 时要特别小心，不要把不可信的数据作为 HTML 插到页面上，而应尽量使用 "),a("code",[t._v(".textContent")]),t._v("、"),a("code",[t._v(".setAttribute()")]),t._v(" 等。")]),t._v(" "),a("li",[t._v("对于 Vue/React 技术栈，并且不使用 v-html/dangerouslySetInnerHTML 功能，就在前端 render 阶段避免 innerHTML、outerHTML 的 XSS 隐患。")]),t._v(" "),a("li",[t._v("DOM 中的内联事件监听器，如 location、onclick、onerror、onload、onmouseover 等，"),a("code",[t._v("<a>")]),t._v(" 标签的 href 属性，JavaScript 的 eval()、setTimeout()、setInterval() 等，都能把字符串作为代码运行。如果不可信的数据拼接到字符串中传递给这些 API，很容易产生安全隐患，请务必避免。")])])])}),[],!1,null,null,null);a.default=s.exports}}]);