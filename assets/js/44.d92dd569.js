(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{343:function(t,a,s){"use strict";s.r(a);var n=s(13),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css基础-选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css基础-选择器"}},[t._v("#")]),t._v(" CSS基础 - 选择器")]),t._v(" "),a("p",[t._v("CSS 选择器规定了 CSS 规则会被应用到哪些元素上。")]),t._v(" "),a("h2",{attrs:{id:"基本选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本选择器"}},[t._v("#")]),t._v(" 基本选择器")]),t._v(" "),a("h3",{attrs:{id:"通用选择器-universal-selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用选择器-universal-selector"}},[t._v("#")]),t._v(" 通用选择器（Universal selector）")]),t._v(" "),a("p",[t._v("选择所有元素。（可选）可以将其限制为特定的名称空间或所有名称空间。")]),t._v(" "),a("p",[t._v("语法："),a("code",[t._v("* ns|* *|*")])]),t._v(" "),a("p",[t._v("在CSS3中,星号(*)可以和命名空间组合使用:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ns|*")]),t._v(" - 会匹配ns命名空间下的所有元素\n"),a("em",[t._v("|")]),t._v(" - 会匹配所有命名空间下的所有元素\n|* - 会匹配所有没有命名空间的元素")])]),t._v(" "),a("p",[t._v("例子：* 将匹配文档的所有元素。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("warning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en-us"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A green span"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" in a red paragraph.\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("maincontent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en-gb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("warning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A red span"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" in a green paragraph.\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*[lang^=en]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*.warning")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("*#maincontent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"元素选择器-type-selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素选择器-type-selector"}},[t._v("#")]),t._v(" 元素选择器（Type selector）")]),t._v(" "),a("p",[t._v("按照给定的节点名称，选择所有匹配的元素。")]),t._v(" "),a("p",[t._v("语法：elementname")]),t._v(" "),a("p",[t._v("例子：input 匹配任何 "),a("code",[t._v("<input>")]),t._v(" 元素。")]),t._v(" "),a("h3",{attrs:{id:"类选择器-class-selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类选择器-class-selector"}},[t._v("#")]),t._v(" 类选择器（Class selector）")]),t._v(" "),a("p",[t._v("按照给定的 class 属性的值，选择所有匹配的元素。")]),t._v(" "),a("p",[t._v("语法：.classname")]),t._v(" "),a("p",[t._v('例子：.index 匹配任何 class 属性中含有 "index" 类的元素。')]),t._v(" "),a("p",[t._v("与以下属性选择器等价")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('[class~="className"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* style */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"id-选择器-id-selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id-选择器-id-selector"}},[t._v("#")]),t._v(" ID 选择器（ID selector）")]),t._v(" "),a("p",[t._v("按照 id 属性选择一个与之匹配的元素。需要注意的是，一个文档中，每个 ID 属性都应当是唯一的。")]),t._v(" "),a("p",[t._v("语法：#idname")]),t._v(" "),a("p",[t._v('例子：#toc 匹配 ID 为 "toc" 的元素。')]),t._v(" "),a("p",[t._v("与以下属性选择器等价：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('[id="idName"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* style */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"属性选择器-attribute-selector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性选择器-attribute-selector"}},[t._v("#")]),t._v(" 属性选择器（Attribute selector）")]),t._v(" "),a("p",[t._v("按照给定的属性，选择所有匹配的元素。")]),t._v(" "),a("p",[t._v("语法：[attr] [attr=value] [attr~=value] [attr|=value] [attr^=value] [attr$=value] [attr*=value]")]),t._v(" "),a("p",[t._v("例子：[autoplay] 选择所有具有 autoplay 属性的元素（不论这个属性的值是什么）。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 存在title属性的<a> 元素 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("a[title]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" purple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 存在href属性并且属性值 匹配 "https://example.org"的<a> 元素 */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[href="https://example.org"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 存在href属性并且属性值 包含 "example"的<a> 元素 */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[href*="example"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 存在href属性并且属性值 结尾 是".org"的<a> 元素 */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[href$=".org"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" italic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 存在class属性并且属性值 包含 "logo"的<a>元素 */')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v('a[class~="logo"]')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"分组选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组选择器"}},[t._v("#")]),t._v(" 分组选择器")]),t._v(" "),a("h3",{attrs:{id:"选择器列表-selector-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器列表-selector-list"}},[t._v("#")]),t._v(" 选择器列表（Selector list）")]),t._v(" "),a("p",[t._v(", 是将不同的选择器组合在一起的方法，它选择所有能被列表中的任意一个选择器选中的节点。")]),t._v(" "),a("p",[t._v("语法：A, B")]),t._v(" "),a("p",[t._v("示例：div, span 会同时匹配 "),a("code",[t._v("<span>")]),t._v(" 元素和 "),a("code",[t._v("<div>")]),t._v("元素。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择所有 <span> 和 <div> 元素 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span, div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red 2px solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("缺点")]),t._v("：在选择器列表中如果有一个选择器不被支持，那么整条规则都会失效。")]),t._v(" "),a("h2",{attrs:{id:"组合器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合器"}},[t._v("#")]),t._v(" 组合器")]),t._v(" "),a("h3",{attrs:{id:"后代组合器-descendant-combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后代组合器-descendant-combinator"}},[t._v("#")]),t._v(" 后代组合器（Descendant combinator）")]),t._v(" "),a("p",[a("code",[t._v("_")]),t._v("（空格）组合器选择前一个元素的后代节点。")]),t._v(" "),a("p",[t._v("语法：A B")]),t._v(" "),a("p",[t._v("例子：div span 匹配所有位于任意 "),a("code",[t._v("<div>")]),t._v(" 元素之内的 "),a("code",[t._v("<span>")]),t._v(" 元素。"),a("strong",[t._v("不需要是直接子元素，选择直接子元素使用"),a("code",[t._v(">")])])]),t._v(" "),a("h3",{attrs:{id:"直接子代组合器-child-combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接子代组合器-child-combinator"}},[t._v("#")]),t._v(" 直接子代组合器（Child combinator）")]),t._v(" "),a("p",[a("code",[t._v(">")]),t._v(" 组合器选择前一个元素的直接子代的节点。")]),t._v(" "),a("p",[t._v("语法：A > B")]),t._v(" "),a("p",[t._v("例子：ul > li 匹配直接嵌套在 "),a("code",[t._v("<ul>")]),t._v(" 元素内的所有 "),a("code",[t._v("<li>")]),t._v(" 元素。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div > span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 选择在div内的span元素，且span是div的直接子元素 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DodgerBlue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"一般兄弟组合器-general-sibling-combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般兄弟组合器-general-sibling-combinator"}},[t._v("#")]),t._v(" 一般兄弟组合器（General sibling combinator）")]),t._v(" "),a("p",[a("code",[t._v("~")]),t._v(" 组合器选择兄弟元素，也就是说，后一个节点在前一个节点后面的任意位置，并且共享同一个父节点。位置无须紧邻，只须同层级。")]),t._v(" "),a("p",[t._v("语法：A ~ B")]),t._v(" "),a("p",[t._v("例子：p ~ span 匹配同一父元素下，"),a("code",[t._v("<p>")]),t._v(" 元素后的所有 "),a("code",[t._v("<span>")]),t._v(" 元素。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p ~ span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上方CSS作用与下方HTML")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("This is not red."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Here is a paragraph."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Here is some code."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("And here is a span."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这行字变成红色 --\x3e")]),t._v("\n")])])]),a("h3",{attrs:{id:"紧邻兄弟组合器-adjacent-sibling-combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#紧邻兄弟组合器-adjacent-sibling-combinator"}},[t._v("#")]),t._v(" 紧邻兄弟组合器（Adjacent sibling combinator）")]),t._v(" "),a("p",[a("code",[t._v("+")]),t._v(" 组合器选择相邻元素，即后一个元素紧跟在前一个之后，并且共享同一个父节点。")]),t._v(" "),a("p",[t._v("语法：A + B")]),t._v(" "),a("p",[t._v("例子：h2 + p 会匹配所有紧邻在 "),a("code",[t._v("<h2>")]),t._v(" (en-US) 元素后的 "),a("code",[t._v("<p>")]),t._v(" 元素。")]),t._v(" "),a("h3",{attrs:{id:"列组合器-column-combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列组合器-column-combinator"}},[t._v("#")]),t._v(" 列组合器（Column combinator）")]),t._v(" "),a("p",[t._v("|| 组合器选择属于某个表格行的节点。\n语法： A || B\n例子： col || td 会匹配所有 ")]),a("col"),t._v(" 作用域内的 "),a("td",[t._v(" 元素。"),a("p"),t._v(" "),a("h2",{attrs:{id:"伪选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪选择器"}},[t._v("#")]),t._v(" 伪选择器")]),t._v(" "),a("h3",{attrs:{id:"伪类选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类选择器"}},[t._v("#")]),t._v(" 伪类选择器")]),t._v(" "),a("p",[a("code",[t._v(":")]),t._v(" 伪选择器支持按照未被包含在文档树中的状态信息来选择元素。\n例子："),a("code",[t._v("a:visited")]),t._v(" 匹配所有曾被访问过的 "),a("code",[t._v("<a>")]),t._v(" 元素。")]),t._v(" "),a("p",[a("strong",[t._v("条件伪类")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v(":lang()")]),t._v("：基于元素语言来匹配页面元素；")]),t._v(" "),a("li",[a("code",[t._v(":dir()")]),t._v("：匹配特定文字书写方向的元素；")]),t._v(" "),a("li",[a("code",[t._v(":has()")]),t._v("：匹配包含指定元素的元素；")]),t._v(" "),a("li",[a("code",[t._v(":is()")]),t._v("：匹配指定选择器列表里的元素；")]),t._v(" "),a("li",[a("code",[t._v(":not()")]),t._v("：用来匹配不符合一组选择器的元素；")])]),t._v(" "),a("h3",{attrs:{id:"伪元素选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪元素选择器"}},[t._v("#")]),t._v(" 伪元素选择器")]),t._v(" "),a("p",[a("code",[t._v("::")]),t._v(" 伪选择器用于表示无法用 HTML 语义表达的实体。\n例子："),a("code",[t._v("p::first-line")]),t._v(" 匹配所有 "),a("code",[t._v("<p>")]),t._v(" 元素的第一行。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("::before")]),t._v("：在元素前插入内容；")]),t._v(" "),a("li",[a("code",[t._v("::after")]),t._v("：在元素后插入内容；")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);